package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"fmt"
	"iam_services_main_v1/gql/generated"
	"iam_services_main_v1/gql/models"
)

// Principal is the resolver for the principal field.
func (r *bindingResolver) Principal(ctx context.Context, obj *models.Binding) (models.Principal, error) {
	panic(fmt.Errorf("not implemented: Principal - principal"))
}

// Role is the resolver for the role field.
func (r *bindingResolver) Role(ctx context.Context, obj *models.Binding) (*models.Role, error) {
	panic(fmt.Errorf("not implemented: Role - role"))
}

// ScopeRef is the resolver for the scopeRef field.
func (r *bindingResolver) ScopeRef(ctx context.Context, obj *models.Binding) (models.Resource, error) {
	panic(fmt.Errorf("not implemented: ScopeRef - scopeRef"))
}

// Binding returns generated.BindingResolver implementation.
func (r *Resolver) Binding() generated.BindingResolver { return &bindingResolver{r} }

type bindingResolver struct{ *Resolver }
