// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"

	"github.com/google/uuid"
)

type Data interface {
	IsData()
}

type OperationResult interface {
	IsOperationResult()
}

type Organization interface {
	IsOrganization()
	GetID() uuid.UUID
	GetName() string
	GetDescription() *string
	GetParentOrg() Organization
	GetCreatedAt() string
	GetUpdatedAt() string
	GetCreatedBy() uuid.UUID
	GetUpdatedBy() uuid.UUID
}

type Principal interface {
	IsPrincipal()
	GetID() uuid.UUID
	GetName() string
	GetEmail() string
	GetTenant() *Tenant
}

type Resource interface {
	IsResource()
	GetID() uuid.UUID
	GetName() string
	GetCreatedAt() string
	GetUpdatedAt() string
	GetCreatedBy() uuid.UUID
	GetUpdatedBy() uuid.UUID
}

type Response interface {
	IsResponse()
	// Indicates if the operation was successful.
	GetSuccess() bool
	// A message providing additional context or information about the operation.
	GetMessage() string
}

// Represents a Account entity
type Account struct {
	ID          uuid.UUID    `json:"id"`
	Name        string       `json:"name"`
	Description *string      `json:"description,omitempty"`
	ParentOrg   Organization `json:"parentOrg,omitempty"`
	BillingInfo *BillingInfo `json:"billingInfo,omitempty"`
	CreatedAt   string       `json:"createdAt"`
	UpdatedAt   string       `json:"updatedAt"`
	CreatedBy   uuid.UUID    `json:"createdBy"`
	UpdatedBy   uuid.UUID    `json:"updatedBy"`
}

func (Account) IsData() {}

func (Account) IsResource()                  {}
func (this Account) GetID() uuid.UUID        { return this.ID }
func (this Account) GetName() string         { return this.Name }
func (this Account) GetCreatedAt() string    { return this.CreatedAt }
func (this Account) GetUpdatedAt() string    { return this.UpdatedAt }
func (this Account) GetCreatedBy() uuid.UUID { return this.CreatedBy }
func (this Account) GetUpdatedBy() uuid.UUID { return this.UpdatedBy }

func (Account) IsOrganization() {}

func (this Account) GetDescription() *string    { return this.Description }
func (this Account) GetParentOrg() Organization { return this.ParentOrg }

// Represents an address entity associated with the Tenant
type Address struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

// Represents a billing address entity associated to account
type BillingAddress struct {
	Street  string `json:"street"`
	City    string `json:"city"`
	State   string `json:"state"`
	Zipcode string `json:"zipcode"`
	Country string `json:"country"`
}

// Represents a billing info entity associated to account
type BillingInfo struct {
	CreditCardNumber string          `json:"creditCardNumber"`
	CreditCardType   string          `json:"creditCardType"`
	ExpirationDate   string          `json:"expirationDate"`
	Cvv              string          `json:"cvv"`
	BillingAddress   *BillingAddress `json:"billingAddress"`
}

type Binding struct {
	ID        string    `json:"id"`
	Name      string    `json:"name"`
	Principal Principal `json:"principal"`
	Role      *Role     `json:"role"`
	ScopeRef  Resource  `json:"scopeRef"`
	Version   string    `json:"version"`
	CreatedAt string    `json:"createdAt"`
	UpdatedAt string    `json:"updatedAt"`
	CreatedBy uuid.UUID `json:"createdBy"`
	UpdatedBy uuid.UUID `json:"updatedBy"`
}

type ClientOrganizationUnit struct {
	ID          uuid.UUID    `json:"id"`
	Name        string       `json:"name"`
	Description *string      `json:"description,omitempty"`
	Tenant      *Tenant      `json:"tenant"`
	ParentOrg   Organization `json:"parentOrg"`
	CreatedAt   string       `json:"createdAt"`
	UpdatedAt   string       `json:"updatedAt"`
	CreatedBy   uuid.UUID    `json:"createdBy"`
	UpdatedBy   uuid.UUID    `json:"updatedBy"`
}

func (ClientOrganizationUnit) IsData() {}

func (ClientOrganizationUnit) IsResource()                  {}
func (this ClientOrganizationUnit) GetID() uuid.UUID        { return this.ID }
func (this ClientOrganizationUnit) GetName() string         { return this.Name }
func (this ClientOrganizationUnit) GetCreatedAt() string    { return this.CreatedAt }
func (this ClientOrganizationUnit) GetUpdatedAt() string    { return this.UpdatedAt }
func (this ClientOrganizationUnit) GetCreatedBy() uuid.UUID { return this.CreatedBy }
func (this ClientOrganizationUnit) GetUpdatedBy() uuid.UUID { return this.UpdatedBy }

func (ClientOrganizationUnit) IsOrganization() {}

func (this ClientOrganizationUnit) GetDescription() *string    { return this.Description }
func (this ClientOrganizationUnit) GetParentOrg() Organization { return this.ParentOrg }

// Represents a contact info entity associated with the Tenant
type ContactInfo struct {
	Email       *string  `json:"email,omitempty"`
	PhoneNumber *string  `json:"phoneNumber,omitempty"`
	Address     *Address `json:"address,omitempty"`
}

// Defines input fields for creating a contact info for a tenant
type ContactInfoInput struct {
	Email       *string             `json:"email,omitempty"`
	PhoneNumber *string             `json:"phoneNumber,omitempty"`
	Address     *CreateAddressInput `json:"address,omitempty"`
}

type CreateAccountInput struct {
	ID          uuid.UUID               `json:"id"`
	Name        string                  `json:"name"`
	Description *string                 `json:"description,omitempty"`
	TenantID    uuid.UUID               `json:"tenantId"`
	ParentID    uuid.UUID               `json:"parentId"`
	BillingInfo *CreateBillingInfoInput `json:"billingInfo,omitempty"`
}

// Defines input fields for creating an address for a tenant
type CreateAddressInput struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

// Defines input fields for create a billing address for an account
type CreateBillingAddressInput struct {
	Street  string `json:"street"`
	City    string `json:"city"`
	State   string `json:"state"`
	Zipcode string `json:"zipcode"`
	Country string `json:"country"`
}

// Defines input fields for create a billing info for an account
type CreateBillingInfoInput struct {
	CreditCardNumber string                     `json:"creditCardNumber"`
	CreditCardType   string                     `json:"creditCardType"`
	ExpirationDate   string                     `json:"expirationDate"`
	Cvv              string                     `json:"cvv"`
	BillingAddress   *CreateBillingAddressInput `json:"billingAddress"`
}

type CreateBindingInput struct {
	Name        string `json:"name"`
	PrincipalID string `json:"principalId"`
	RoleID      string `json:"roleId"`
	ScopeRefID  string `json:"scopeRefId"`
	Version     string `json:"version"`
}

type CreateClientOrganizationUnitInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	TenantID    string  `json:"tenantId"`
	ParentOrgID string  `json:"parentOrgId"`
}

type CreateGroupInput struct {
	Name        string   `json:"name"`
	Email       string   `json:"email"`
	TenantID    string   `json:"tenantId"`
	Description *string  `json:"description,omitempty"`
	Members     []string `json:"members"`
}

// Input for creating a new Permission
type CreatePermission struct {
	Name      string  `json:"name"`
	ServiceID *string `json:"serviceId,omitempty"`
	Action    *string `json:"action,omitempty"`
}

// Input for creating a new Role
type CreateRoleInput struct {
	Name               string       `json:"name"`
	Version            string       `json:"version"`
	Description        *string      `json:"description,omitempty"`
	Permissions        []string     `json:"permissions"`
	RoleType           RoleTypeEnum `json:"roleType"`
	AssignableScopeRef uuid.UUID    `json:"assignableScopeRef"`
}

type CreateRootInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
}

// Defines input fields for creating a tenant
type CreateTenantInput struct {
	ID          uuid.UUID         `json:"id"`
	Name        string            `json:"name"`
	Description *string           `json:"description,omitempty"`
	ParentID    uuid.UUID         `json:"parentId"`
	ContactInfo *ContactInfoInput `json:"contactInfo,omitempty"`
}

type CreateUserInput struct {
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
	TenantID  string `json:"tenantId"`
}

type ErrorResponse struct {
	Success      bool    `json:"success"`
	Message      string  `json:"message"`
	ErrorCode    string  `json:"errorCode"`
	ErrorDetails *string `json:"errorDetails,omitempty"`
}

func (ErrorResponse) IsOperationResult() {}

func (ErrorResponse) IsResponse() {}

// Indicates if the operation was successful.
func (this ErrorResponse) GetSuccess() bool { return this.Success }

// A message providing additional context or information about the operation.
func (this ErrorResponse) GetMessage() string { return this.Message }

type Group struct {
	ID          uuid.UUID `json:"id"`
	Name        string    `json:"name"`
	Email       string    `json:"email"`
	Tenant      *Tenant   `json:"tenant"`
	Description *string   `json:"description,omitempty"`
	Members     []*User   `json:"members"`
	CreatedAt   string    `json:"createdAt"`
	UpdatedAt   string    `json:"updatedAt"`
	CreatedBy   uuid.UUID `json:"createdBy"`
	UpdatedBy   uuid.UUID `json:"updatedBy"`
}

func (Group) IsPrincipal()            {}
func (this Group) GetID() uuid.UUID   { return this.ID }
func (this Group) GetName() string    { return this.Name }
func (this Group) GetEmail() string   { return this.Email }
func (this Group) GetTenant() *Tenant { return this.Tenant }

func (Group) IsResource() {}

func (this Group) GetCreatedAt() string    { return this.CreatedAt }
func (this Group) GetUpdatedAt() string    { return this.UpdatedAt }
func (this Group) GetCreatedBy() uuid.UUID { return this.CreatedBy }
func (this Group) GetUpdatedBy() uuid.UUID { return this.UpdatedBy }

// Represents a Permission entity
type Permission struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	ServiceID *string   `json:"serviceId,omitempty"`
	Action    *string   `json:"action,omitempty"`
	CreatedAt string    `json:"createdAt"`
	UpdatedAt string    `json:"updatedAt"`
	CreatedBy uuid.UUID `json:"createdBy"`
	UpdatedBy uuid.UUID `json:"updatedBy"`
}

func (Permission) IsData() {}

type Role struct {
	ID              uuid.UUID     `json:"id"`
	Name            string        `json:"name"`
	Version         string        `json:"version"`
	Description     *string       `json:"description,omitempty"`
	Permissions     []*Permission `json:"permissions"`
	RoleType        RoleTypeEnum  `json:"roleType"`
	AssignableScope Resource      `json:"assignableScope,omitempty"`
	CreatedAt       string        `json:"createdAt"`
	UpdatedAt       string        `json:"updatedAt"`
	CreatedBy       uuid.UUID     `json:"createdBy"`
	UpdatedBy       uuid.UUID     `json:"updatedBy"`
}

func (Role) IsData() {}

func (Role) IsResource()                  {}
func (this Role) GetID() uuid.UUID        { return this.ID }
func (this Role) GetName() string         { return this.Name }
func (this Role) GetCreatedAt() string    { return this.CreatedAt }
func (this Role) GetUpdatedAt() string    { return this.UpdatedAt }
func (this Role) GetCreatedBy() uuid.UUID { return this.CreatedBy }
func (this Role) GetUpdatedBy() uuid.UUID { return this.UpdatedBy }

type Root struct {
	ID          uuid.UUID    `json:"id"`
	Name        string       `json:"name"`
	Description *string      `json:"description,omitempty"`
	ParentOrg   Organization `json:"parentOrg,omitempty"`
	CreatedAt   string       `json:"createdAt"`
	UpdatedAt   string       `json:"updatedAt"`
	CreatedBy   uuid.UUID    `json:"createdBy"`
	UpdatedBy   uuid.UUID    `json:"updatedBy"`
}

func (Root) IsData() {}

func (Root) IsResource()                  {}
func (this Root) GetID() uuid.UUID        { return this.ID }
func (this Root) GetName() string         { return this.Name }
func (this Root) GetCreatedAt() string    { return this.CreatedAt }
func (this Root) GetUpdatedAt() string    { return this.UpdatedAt }
func (this Root) GetCreatedBy() uuid.UUID { return this.CreatedBy }
func (this Root) GetUpdatedBy() uuid.UUID { return this.UpdatedBy }

func (Root) IsOrganization() {}

func (this Root) GetDescription() *string    { return this.Description }
func (this Root) GetParentOrg() Organization { return this.ParentOrg }

// Represents a Service entity associated with Permissions
type Service struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type SuccessResponse struct {
	// Indicates if the operation was successful.
	Success bool `json:"success"`
	// A message providing additional context or information about the operation.
	Message string `json:"message"`
	// The data returned from the operation.
	Data []Data `json:"data,omitempty"`
}

func (SuccessResponse) IsOperationResult() {}

func (SuccessResponse) IsResponse() {}

// Indicates if the operation was successful.
func (this SuccessResponse) GetSuccess() bool { return this.Success }

// A message providing additional context or information about the operation.
func (this SuccessResponse) GetMessage() string { return this.Message }

// Represents a Tenant entity
type Tenant struct {
	ID          uuid.UUID    `json:"id"`
	Name        string       `json:"name"`
	Description *string      `json:"description,omitempty"`
	ParentOrg   Organization `json:"parentOrg"`
	ContactInfo *ContactInfo `json:"contactInfo,omitempty"`
	CreatedAt   string       `json:"createdAt"`
	UpdatedAt   string       `json:"updatedAt"`
	CreatedBy   uuid.UUID    `json:"createdBy"`
	UpdatedBy   uuid.UUID    `json:"updatedBy"`
}

func (Tenant) IsData() {}

func (Tenant) IsResource()                  {}
func (this Tenant) GetID() uuid.UUID        { return this.ID }
func (this Tenant) GetName() string         { return this.Name }
func (this Tenant) GetCreatedAt() string    { return this.CreatedAt }
func (this Tenant) GetUpdatedAt() string    { return this.UpdatedAt }
func (this Tenant) GetCreatedBy() uuid.UUID { return this.CreatedBy }
func (this Tenant) GetUpdatedBy() uuid.UUID { return this.UpdatedBy }

func (Tenant) IsOrganization() {}

func (this Tenant) GetDescription() *string    { return this.Description }
func (this Tenant) GetParentOrg() Organization { return this.ParentOrg }

// Defines input fields for updating a account
type UpdateAccountInput struct {
	ID          uuid.UUID               `json:"id"`
	Name        *string                 `json:"name,omitempty"`
	Description *string                 `json:"description,omitempty"`
	TenantID    *uuid.UUID              `json:"tenantId,omitempty"`
	ParentID    *uuid.UUID              `json:"parentId,omitempty"`
	BillingInfo *UpdateBillingInfoInput `json:"billingInfo,omitempty"`
}

// Defines input fields for updating an address for a tenant
type UpdateAddressInput struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

// Defines input fields for updating a billing address for an account
type UpdateBillingAddressInput struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	Zipcode *string `json:"zipcode,omitempty"`
	Country *string `json:"country,omitempty"`
}

// Defines input fields for updating a billing info for an account
type UpdateBillingInfoInput struct {
	CreditCardNumber *string                    `json:"creditCardNumber,omitempty"`
	CreditCardType   *string                    `json:"creditCardType,omitempty"`
	ExpirationDate   *string                    `json:"expirationDate,omitempty"`
	Cvv              *string                    `json:"cvv,omitempty"`
	BillingAddress   *UpdateBillingAddressInput `json:"billingAddress,omitempty"`
}

type UpdateBindingInput struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	PrincipalID string `json:"principalId"`
	RoleID      string `json:"roleId"`
	ScopeRefID  string `json:"scopeRefId"`
	Version     string `json:"version"`
}

type UpdateClientOrganizationUnitInput struct {
	ID          uuid.UUID `json:"id"`
	Name        *string   `json:"name,omitempty"`
	Description *string   `json:"description,omitempty"`
	TenantID    *string   `json:"tenantId,omitempty"`
	ParentOrgID *string   `json:"parentOrgId,omitempty"`
}

type UpdateGroupInput struct {
	ID          string   `json:"id"`
	Name        *string  `json:"name,omitempty"`
	Email       *string  `json:"email,omitempty"`
	TenantID    string   `json:"tenantId"`
	Description *string  `json:"description,omitempty"`
	Members     []string `json:"members"`
}

// Input for updating an existing Permission
type UpdatePermission struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	ServiceID *string   `json:"serviceId,omitempty"`
	Action    *string   `json:"action,omitempty"`
}

// Input for updating an existing Role
type UpdateRoleInput struct {
	ID                 uuid.UUID    `json:"id"`
	Name               string       `json:"name"`
	Version            string       `json:"version"`
	Description        *string      `json:"description,omitempty"`
	Permissions        []string     `json:"permissions"`
	RoleType           RoleTypeEnum `json:"roleType"`
	AssignableScopeRef uuid.UUID    `json:"assignableScopeRef"`
}

type UpdateRootInput struct {
	ID          uuid.UUID `json:"id"`
	Name        *string   `json:"name,omitempty"`
	Description *string   `json:"description,omitempty"`
}

// Defines input fields for updating a tenant
type UpdateTenantInput struct {
	ID          uuid.UUID         `json:"id"`
	Name        *string           `json:"name,omitempty"`
	Description *string           `json:"description,omitempty"`
	ParentID    uuid.UUID         `json:"parentId"`
	ContactInfo *ContactInfoInput `json:"contactInfo,omitempty"`
}

type UpdateUserInput struct {
	ID        string  `json:"id"`
	FirstName *string `json:"firstName,omitempty"`
	LastName  *string `json:"lastName,omitempty"`
	Email     *string `json:"email,omitempty"`
	TenantID  *string `json:"tenantId,omitempty"`
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	FirstName string    `json:"firstName"`
	LastName  string    `json:"lastName"`
	Email     string    `json:"email"`
	Tenant    *Tenant   `json:"tenant"`
	CreatedAt string    `json:"createdAt"`
	UpdatedAt string    `json:"updatedAt"`
	CreatedBy uuid.UUID `json:"createdBy"`
	UpdatedBy uuid.UUID `json:"updatedBy"`
}

func (User) IsPrincipal()            {}
func (this User) GetID() uuid.UUID   { return this.ID }
func (this User) GetName() string    { return this.Name }
func (this User) GetEmail() string   { return this.Email }
func (this User) GetTenant() *Tenant { return this.Tenant }

func (User) IsResource() {}

func (this User) GetCreatedAt() string    { return this.CreatedAt }
func (this User) GetUpdatedAt() string    { return this.UpdatedAt }
func (this User) GetCreatedBy() uuid.UUID { return this.CreatedBy }
func (this User) GetUpdatedBy() uuid.UUID { return this.UpdatedBy }

// Represents a Role entity
type RoleTypeEnum string

const (
	RoleTypeEnumDefault RoleTypeEnum = "DEFAULT"
	RoleTypeEnumCustom  RoleTypeEnum = "CUSTOM"
)

var AllRoleTypeEnum = []RoleTypeEnum{
	RoleTypeEnumDefault,
	RoleTypeEnumCustom,
}

func (e RoleTypeEnum) IsValid() bool {
	switch e {
	case RoleTypeEnumDefault, RoleTypeEnumCustom:
		return true
	}
	return false
}

func (e RoleTypeEnum) String() string {
	return string(e)
}

func (e *RoleTypeEnum) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = RoleTypeEnum(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid RoleTypeEnum", str)
	}
	return nil
}

func (e RoleTypeEnum) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
