// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"

	"github.com/google/uuid"
)

// Interface of Organization
type Organization interface {
	IsOrganization()
	GetID() uuid.UUID
	GetName() string
	GetDescription() *string
	GetParentOrg() Organization
	GetCreatedAt() string
	GetUpdatedAt() *string
	GetCreatedBy() *string
	GetUpdatedBy() *string
}

type Principal interface {
	IsPrincipal()
	GetID() uuid.UUID
	GetName() string
	GetEmail() string
	GetTenant() *Tenant
}

// Interface of Resources
type Resource interface {
	IsResource()
	GetID() uuid.UUID
	GetName() string
	GetCreatedAt() string
	GetUpdatedAt() *string
	GetCreatedBy() *string
	GetUpdatedBy() *string
}

type Account struct {
	ID          uuid.UUID    `json:"id"`
	Name        string       `json:"name"`
	CreatedAt   string       `json:"createdAt"`
	UpdatedAt   *string      `json:"updatedAt,omitempty"`
	CreatedBy   *string      `json:"createdBy,omitempty"`
	UpdatedBy   *string      `json:"updatedBy,omitempty"`
	Description *string      `json:"description,omitempty"`
	ParentOrg   Organization `json:"parentOrg,omitempty"`
	BillingInfo *BillingInfo `json:"billingInfo,omitempty"`
}

func (Account) IsResource()                {}
func (this Account) GetID() uuid.UUID      { return this.ID }
func (this Account) GetName() string       { return this.Name }
func (this Account) GetCreatedAt() string  { return this.CreatedAt }
func (this Account) GetUpdatedAt() *string { return this.UpdatedAt }
func (this Account) GetCreatedBy() *string { return this.CreatedBy }
func (this Account) GetUpdatedBy() *string { return this.UpdatedBy }

func (Account) IsOrganization() {}

func (this Account) GetDescription() *string    { return this.Description }
func (this Account) GetParentOrg() Organization { return this.ParentOrg }

type Address struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

type BillingAddress struct {
	Street  string `json:"street"`
	City    string `json:"city"`
	State   string `json:"state"`
	Zipcode string `json:"zipcode"`
	Country string `json:"country"`
}

type BillingInfo struct {
	ID               uuid.UUID       `json:"id"`
	CreditCardNumber string          `json:"creditCardNumber"`
	CreditCardType   string          `json:"creditCardType"`
	ExpirationDate   string          `json:"expirationDate"`
	Cvv              string          `json:"cvv"`
	BillingAddress   *BillingAddress `json:"billingAddress"`
}

type Binding struct {
	ID        string    `json:"id"`
	Name      string    `json:"name"`
	CreatedAt *string   `json:"createdAt,omitempty"`
	UpdatedAt *string   `json:"updatedAt,omitempty"`
	CreatedBy *string   `json:"createdBy,omitempty"`
	UpdatedBy *string   `json:"updatedBy,omitempty"`
	Principal Principal `json:"principal"`
	Role      *Role     `json:"role"`
	ScopeRef  Resource  `json:"scopeRef"`
	Version   string    `json:"version"`
}

type ClientOrganizationUnit struct {
	ID          uuid.UUID    `json:"id"`
	Name        string       `json:"name"`
	Description *string      `json:"description,omitempty"`
	Tenant      *Tenant      `json:"tenant"`
	ParentOrg   Organization `json:"parentOrg"`
	CreatedAt   string       `json:"createdAt"`
	UpdatedAt   *string      `json:"updatedAt,omitempty"`
	CreatedBy   *string      `json:"createdBy,omitempty"`
	UpdatedBy   *string      `json:"updatedBy,omitempty"`
}

func (ClientOrganizationUnit) IsResource()                {}
func (this ClientOrganizationUnit) GetID() uuid.UUID      { return this.ID }
func (this ClientOrganizationUnit) GetName() string       { return this.Name }
func (this ClientOrganizationUnit) GetCreatedAt() string  { return this.CreatedAt }
func (this ClientOrganizationUnit) GetUpdatedAt() *string { return this.UpdatedAt }
func (this ClientOrganizationUnit) GetCreatedBy() *string { return this.CreatedBy }
func (this ClientOrganizationUnit) GetUpdatedBy() *string { return this.UpdatedBy }

func (ClientOrganizationUnit) IsOrganization() {}

func (this ClientOrganizationUnit) GetDescription() *string    { return this.Description }
func (this ClientOrganizationUnit) GetParentOrg() Organization { return this.ParentOrg }

type ContactInfo struct {
	Email       *string  `json:"email,omitempty"`
	PhoneNumber *string  `json:"phoneNumber,omitempty"`
	Address     *Address `json:"address,omitempty"`
}

type ContactInfoInput struct {
	Email       *string             `json:"email,omitempty"`
	PhoneNumber *string             `json:"phoneNumber,omitempty"`
	Address     *CreateAddressInput `json:"address,omitempty"`
}

type CreateAccountInput struct {
	Name        string                  `json:"name"`
	Description *string                 `json:"description,omitempty"`
	TenantID    uuid.UUID               `json:"tenantId"`
	ParentID    uuid.UUID               `json:"parentId"`
	BillingInfo *CreateBillingInfoInput `json:"billingInfo,omitempty"`
}

type CreateAddressInput struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

type CreateBillingAddressInput struct {
	Street  string `json:"street"`
	City    string `json:"city"`
	State   string `json:"state"`
	Zipcode string `json:"zipcode"`
	Country string `json:"country"`
}

type CreateBillingInfoInput struct {
	CreditCardNumber string                     `json:"creditCardNumber"`
	CreditCardType   string                     `json:"creditCardType"`
	ExpirationDate   string                     `json:"expirationDate"`
	Cvv              string                     `json:"cvv"`
	BillingAddress   *CreateBillingAddressInput `json:"billingAddress"`
}

type CreateBindingInput struct {
	Name        string `json:"name"`
	PrincipalID string `json:"principalId"`
	RoleID      string `json:"roleId"`
	ScopeRefID  string `json:"scopeRefId"`
	Version     string `json:"version"`
	CreatedBy   string `json:"createdBy"`
}

type CreateClientOrganizationUnitInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	TenantID    string  `json:"tenantId"`
	ParentOrgID string  `json:"parentOrgId"`
}

type CreateGroupInput struct {
	Name        string   `json:"name"`
	Email       string   `json:"email"`
	TenantID    string   `json:"tenantId"`
	Description *string  `json:"description,omitempty"`
	Members     []string `json:"members"`
}

type CreatePermission struct {
	Name        string    `json:"name"`
	ServiceID   uuid.UUID `json:"serviceId"`
	Action      string    `json:"action"`
	Resource    string    `json:"resource"`
	Description *string   `json:"description,omitempty"`
}

type CreateRoleInput struct {
	Name               string       `json:"name"`
	Version            string       `json:"version"`
	Description        *string      `json:"description,omitempty"`
	Permissions        []string     `json:"permissions"`
	RoleType           RoleTypeEnum `json:"roleType"`
	AssignableScopeRef uuid.UUID    `json:"assignableScopeRef"`
}

type CreateRootInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
}

type CreateTenantInput struct {
	Name        string            `json:"name"`
	Description *string           `json:"description,omitempty"`
	ParentOrgID string            `json:"parentOrgId"`
	ContactInfo *ContactInfoInput `json:"contactInfo,omitempty"`
}

type CreateUserInput struct {
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
	TenantID  string `json:"tenantId"`
}

type Group struct {
	ID          uuid.UUID `json:"id"`
	Name        string    `json:"name"`
	Email       string    `json:"email"`
	Tenant      *Tenant   `json:"tenant"`
	Description *string   `json:"description,omitempty"`
	Members     []*User   `json:"members"`
	CreatedAt   string    `json:"createdAt"`
	UpdatedAt   *string   `json:"updatedAt,omitempty"`
	CreatedBy   *string   `json:"createdBy,omitempty"`
	UpdatedBy   *string   `json:"updatedBy,omitempty"`
}

func (Group) IsPrincipal()            {}
func (this Group) GetID() uuid.UUID   { return this.ID }
func (this Group) GetName() string    { return this.Name }
func (this Group) GetEmail() string   { return this.Email }
func (this Group) GetTenant() *Tenant { return this.Tenant }

func (Group) IsResource() {}

func (this Group) GetCreatedAt() string  { return this.CreatedAt }
func (this Group) GetUpdatedAt() *string { return this.UpdatedAt }
func (this Group) GetCreatedBy() *string { return this.CreatedBy }
func (this Group) GetUpdatedBy() *string { return this.UpdatedBy }

type Permission struct {
	ID          uuid.UUID `json:"id"`
	Name        string    `json:"name"`
	ServiceID   *string   `json:"serviceId,omitempty"`
	Action      *string   `json:"action,omitempty"`
	Resource    string    `json:"resource"`
	Description *string   `json:"description,omitempty"`
	CreatedAt   *string   `json:"createdAt,omitempty"`
	CreatedBy   string    `json:"createdBy"`
	UpdatedAt   *string   `json:"updatedAt,omitempty"`
	UpdatedBy   *string   `json:"updatedBy,omitempty"`
}

type Role struct {
	ID              uuid.UUID     `json:"id"`
	Name            string        `json:"name"`
	Version         string        `json:"version"`
	Description     *string       `json:"description,omitempty"`
	Permissions     []*Permission `json:"permissions"`
	RoleType        RoleTypeEnum  `json:"roleType"`
	AssignableScope Resource      `json:"assignableScope"`
	CreatedAt       string        `json:"createdAt"`
	CreatedBy       *string       `json:"createdBy,omitempty"`
	UpdatedAt       *string       `json:"updatedAt,omitempty"`
	UpdatedBy       *string       `json:"updatedBy,omitempty"`
}

func (Role) IsResource()                {}
func (this Role) GetID() uuid.UUID      { return this.ID }
func (this Role) GetName() string       { return this.Name }
func (this Role) GetCreatedAt() string  { return this.CreatedAt }
func (this Role) GetUpdatedAt() *string { return this.UpdatedAt }
func (this Role) GetCreatedBy() *string { return this.CreatedBy }
func (this Role) GetUpdatedBy() *string { return this.UpdatedBy }

type Root struct {
	ID          uuid.UUID    `json:"id"`
	Name        string       `json:"name"`
	Description *string      `json:"description,omitempty"`
	ParentOrg   Organization `json:"parentOrg,omitempty"`
	CreatedAt   string       `json:"createdAt"`
	UpdatedAt   *string      `json:"updatedAt,omitempty"`
	CreatedBy   *string      `json:"createdBy,omitempty"`
	UpdatedBy   *string      `json:"updatedBy,omitempty"`
}

func (Root) IsResource()                {}
func (this Root) GetID() uuid.UUID      { return this.ID }
func (this Root) GetName() string       { return this.Name }
func (this Root) GetCreatedAt() string  { return this.CreatedAt }
func (this Root) GetUpdatedAt() *string { return this.UpdatedAt }
func (this Root) GetCreatedBy() *string { return this.CreatedBy }
func (this Root) GetUpdatedBy() *string { return this.UpdatedBy }

func (Root) IsOrganization() {}

func (this Root) GetDescription() *string    { return this.Description }
func (this Root) GetParentOrg() Organization { return this.ParentOrg }

type Tenant struct {
	ID          uuid.UUID    `json:"id"`
	Name        string       `json:"name"`
	Description *string      `json:"description,omitempty"`
	ParentOrg   Organization `json:"parentOrg"`
	ContactInfo *ContactInfo `json:"contactInfo,omitempty"`
	CreatedAt   string       `json:"createdAt"`
	UpdatedAt   *string      `json:"updatedAt,omitempty"`
	CreatedBy   *string      `json:"createdBy,omitempty"`
	UpdatedBy   *string      `json:"updatedBy,omitempty"`
}

func (Tenant) IsResource()                {}
func (this Tenant) GetID() uuid.UUID      { return this.ID }
func (this Tenant) GetName() string       { return this.Name }
func (this Tenant) GetCreatedAt() string  { return this.CreatedAt }
func (this Tenant) GetUpdatedAt() *string { return this.UpdatedAt }
func (this Tenant) GetCreatedBy() *string { return this.CreatedBy }
func (this Tenant) GetUpdatedBy() *string { return this.UpdatedBy }

func (Tenant) IsOrganization() {}

func (this Tenant) GetDescription() *string    { return this.Description }
func (this Tenant) GetParentOrg() Organization { return this.ParentOrg }

type UpdateAccountInput struct {
	ID          uuid.UUID               `json:"id"`
	Name        *string                 `json:"name,omitempty"`
	Description *string                 `json:"description,omitempty"`
	TenantID    *uuid.UUID              `json:"tenantId,omitempty"`
	ParentID    *uuid.UUID              `json:"parentId,omitempty"`
	BillingInfo *UpdateBillingInfoInput `json:"billingInfo,omitempty"`
}

type UpdateAddressInput struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

type UpdateBillingAddressInput struct {
	BillingInfoID uuid.UUID `json:"billingInfoId"`
	Street        *string   `json:"street,omitempty"`
	City          *string   `json:"city,omitempty"`
	State         *string   `json:"state,omitempty"`
	Zipcode       *string   `json:"zipcode,omitempty"`
	Country       *string   `json:"country,omitempty"`
}

type UpdateBillingInfoInput struct {
	ID               uuid.UUID                  `json:"id"`
	CreditCardNumber string                     `json:"creditCardNumber"`
	CreditCardType   string                     `json:"creditCardType"`
	ExpirationDate   string                     `json:"expirationDate"`
	Cvv              string                     `json:"cvv"`
	BillingAddress   *UpdateBillingAddressInput `json:"billingAddress"`
}

type UpdateBindingInput struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	PrincipalID string `json:"principalId"`
	RoleID      string `json:"roleId"`
	ScopeRefID  string `json:"scopeRefId"`
	Version     string `json:"version"`
	UpdatedBy   string `json:"updatedBy"`
}

type UpdateClientOrganizationUnitInput struct {
	ID          uuid.UUID `json:"id"`
	Name        *string   `json:"name,omitempty"`
	Description *string   `json:"description,omitempty"`
	TenantID    *string   `json:"tenantId,omitempty"`
	ParentOrgID *string   `json:"parentOrgId,omitempty"`
}

type UpdateGroupInput struct {
	ID          string   `json:"id"`
	Name        *string  `json:"name,omitempty"`
	Email       *string  `json:"email,omitempty"`
	TenantID    string   `json:"tenantId"`
	Description *string  `json:"description,omitempty"`
	Members     []string `json:"members"`
}

type UpdatePermission struct {
	ID          uuid.UUID  `json:"id"`
	Name        string     `json:"name"`
	ServiceID   *uuid.UUID `json:"serviceId,omitempty"`
	Action      *string    `json:"action,omitempty"`
	Resource    string     `json:"resource"`
	Description *string    `json:"description,omitempty"`
}

type UpdateRoleInput struct {
	ID                 uuid.UUID    `json:"id"`
	Name               string       `json:"name"`
	Version            string       `json:"version"`
	Description        *string      `json:"description,omitempty"`
	Permissions        []string     `json:"permissions"`
	RoleType           RoleTypeEnum `json:"roleType"`
	AssignableScopeRef uuid.UUID    `json:"assignableScopeRef"`
}

type UpdateRootInput struct {
	ID          uuid.UUID `json:"id"`
	Name        *string   `json:"name,omitempty"`
	Description *string   `json:"description,omitempty"`
}

type UpdateTenantInput struct {
	ID          uuid.UUID         `json:"id"`
	Name        *string           `json:"name,omitempty"`
	Description *string           `json:"description,omitempty"`
	ParentOrgID *string           `json:"parentOrgId,omitempty"`
	ContactInfo *ContactInfoInput `json:"contactInfo,omitempty"`
}

type UpdateUserInput struct {
	ID        string  `json:"id"`
	FirstName *string `json:"firstName,omitempty"`
	LastName  *string `json:"lastName,omitempty"`
	Email     *string `json:"email,omitempty"`
	TenantID  *string `json:"tenantId,omitempty"`
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	FirstName string    `json:"firstName"`
	LastName  string    `json:"lastName"`
	Email     string    `json:"email"`
	CreatedAt string    `json:"createdAt"`
	UpdatedAt *string   `json:"updatedAt,omitempty"`
	Tenant    *Tenant   `json:"tenant"`
	CreatedBy *string   `json:"createdBy,omitempty"`
	UpdatedBy *string   `json:"updatedBy,omitempty"`
}

func (User) IsPrincipal()            {}
func (this User) GetID() uuid.UUID   { return this.ID }
func (this User) GetName() string    { return this.Name }
func (this User) GetEmail() string   { return this.Email }
func (this User) GetTenant() *Tenant { return this.Tenant }

func (User) IsResource() {}

func (this User) GetCreatedAt() string  { return this.CreatedAt }
func (this User) GetUpdatedAt() *string { return this.UpdatedAt }
func (this User) GetCreatedBy() *string { return this.CreatedBy }
func (this User) GetUpdatedBy() *string { return this.UpdatedBy }

type RoleTypeEnum string

const (
	RoleTypeEnumDefault RoleTypeEnum = "DEFAULT"
	RoleTypeEnumCustom  RoleTypeEnum = "CUSTOM"
)

var AllRoleTypeEnum = []RoleTypeEnum{
	RoleTypeEnumDefault,
	RoleTypeEnumCustom,
}

func (e RoleTypeEnum) IsValid() bool {
	switch e {
	case RoleTypeEnumDefault, RoleTypeEnumCustom:
		return true
	}
	return false
}

func (e RoleTypeEnum) String() string {
	return string(e)
}

func (e *RoleTypeEnum) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = RoleTypeEnum(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid RoleTypeEnum", str)
	}
	return nil
}

func (e RoleTypeEnum) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
