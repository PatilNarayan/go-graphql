// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type Organization interface {
	IsOrganization()
	GetID() string
	GetName() string
	GetDescription() *string
}

type Principal interface {
	IsPrincipal()
	GetID() string
	GetName() string
	GetEmail() string
	GetTenant() *Tenant
}

type Resource interface {
	IsResource()
	GetID() string
	GetName() string
	GetCreatedDate() string
	GetUpdatedDate() *string
}

type Account struct {
	ID          string       `json:"id"`
	Name        string       `json:"name"`
	CreatedDate string       `json:"createdDate"`
	UpdatedDate *string      `json:"updatedDate,omitempty"`
	Description *string      `json:"description,omitempty"`
	Tenant      *Tenant      `json:"tenant"`
	ParentOrg   Organization `json:"parentOrg"`
	BillingInfo *BillingInfo `json:"billingInfo,omitempty"`
}

func (Account) IsResource()                  {}
func (this Account) GetID() string           { return this.ID }
func (this Account) GetName() string         { return this.Name }
func (this Account) GetCreatedDate() string  { return this.CreatedDate }
func (this Account) GetUpdatedDate() *string { return this.UpdatedDate }

func (Account) IsOrganization() {}

func (this Account) GetDescription() *string { return this.Description }

type Address struct {
	ID      string  `json:"id"`
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

type BillingAddress struct {
	ID      string `json:"id"`
	Street  string `json:"street"`
	City    string `json:"city"`
	State   string `json:"state"`
	ZipCode string `json:"zipCode"`
	Country string `json:"country"`
}

type BillingInfo struct {
	ID               string          `json:"id"`
	CreditCardNumber string          `json:"creditCardNumber"`
	CreditCardType   string          `json:"creditCardType"`
	ExpirationDate   string          `json:"expirationDate"`
	Cvv              string          `json:"cvv"`
	BillingAddress   *BillingAddress `json:"billingAddress"`
}

type Binding struct {
	ID          string    `json:"id"`
	Name        string    `json:"name"`
	CreatedDate string    `json:"createdDate"`
	UpdatedDate *string   `json:"updatedDate,omitempty"`
	Principal   Principal `json:"principal"`
	Role        *Role     `json:"role"`
	ScopeRef    Resource  `json:"scopeRef"`
	Version     string    `json:"version"`
}

func (Binding) IsResource()                  {}
func (this Binding) GetID() string           { return this.ID }
func (this Binding) GetName() string         { return this.Name }
func (this Binding) GetCreatedDate() string  { return this.CreatedDate }
func (this Binding) GetUpdatedDate() *string { return this.UpdatedDate }

type ClientOrganizationUnit struct {
	ID          string       `json:"id"`
	Name        string       `json:"name"`
	CreatedDate string       `json:"createdDate"`
	UpdatedDate *string      `json:"updatedDate,omitempty"`
	Description *string      `json:"description,omitempty"`
	Tenant      *Tenant      `json:"tenant"`
	ParentOrg   Organization `json:"parentOrg"`
}

func (ClientOrganizationUnit) IsResource()                  {}
func (this ClientOrganizationUnit) GetID() string           { return this.ID }
func (this ClientOrganizationUnit) GetName() string         { return this.Name }
func (this ClientOrganizationUnit) GetCreatedDate() string  { return this.CreatedDate }
func (this ClientOrganizationUnit) GetUpdatedDate() *string { return this.UpdatedDate }

func (ClientOrganizationUnit) IsOrganization() {}

func (this ClientOrganizationUnit) GetDescription() *string { return this.Description }

type ContactInfo struct {
	ID          string   `json:"id"`
	Email       *string  `json:"email,omitempty"`
	PhoneNumber *string  `json:"phoneNumber,omitempty"`
	Address     *Address `json:"address,omitempty"`
}

type CreateAccountInput struct {
	Name          string  `json:"name"`
	Description   *string `json:"description,omitempty"`
	TenantID      string  `json:"tenantId"`
	ParentOrgID   string  `json:"parentOrgId"`
	BillingInfoID string  `json:"billingInfoId"`
}

type CreateAddressInput struct {
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

type CreateBillingAddressInput struct {
	Street  string `json:"street"`
	City    string `json:"city"`
	State   string `json:"state"`
	ZipCode string `json:"zipCode"`
	Country string `json:"country"`
}

type CreateBillingInfoInput struct {
	CreditCardNumber string `json:"creditCardNumber"`
	CreditCardType   string `json:"creditCardType"`
	ExpirationDate   string `json:"expirationDate"`
	Cvv              string `json:"cvv"`
	BillingAddressID string `json:"billingAddressId"`
}

type CreateBindingInput struct {
	Name        string `json:"name"`
	PrincipalID string `json:"principalId"`
	RoleID      string `json:"roleId"`
	ScopeRefID  string `json:"scopeRefId"`
	Version     string `json:"version"`
}

type CreateClientOrganizationUnitInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	TenantID    string  `json:"tenantId"`
	ParentOrgID string  `json:"parentOrgId"`
}

type CreateGroupInput struct {
	Name        string   `json:"name"`
	Email       string   `json:"email"`
	TenantID    string   `json:"tenantId"`
	Description *string  `json:"description,omitempty"`
	Members     []string `json:"members"`
}

type CreatePermissionInput struct {
	Name       string `json:"name"`
	Action     string `json:"action"`
	ServiceRef string `json:"serviceRef"`
}

type CreateRoleInput struct {
	Name               string       `json:"name"`
	Version            string       `json:"version"`
	Description        *string      `json:"description,omitempty"`
	Permissions        []string     `json:"permissions"`
	RoleType           RoleTypeEnum `json:"roleType"`
	AssignableScopeRef string       `json:"assignableScopeRef"`
}

type CreateRootInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
}

type CreateTenantInput struct {
	Name          string  `json:"name"`
	Description   *string `json:"description,omitempty"`
	ParentOrgID   string  `json:"parentOrgId"`
	ContactInfoID string  `json:"contactInfoId"`
}

type CreateUserInput struct {
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
	TenantID  string `json:"tenantId"`
}

type Group struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Email       string  `json:"email"`
	Tenant      *Tenant `json:"tenant"`
	Description *string `json:"description,omitempty"`
	Members     []*User `json:"members"`
	CreatedDate string  `json:"createdDate"`
	UpdatedDate *string `json:"updatedDate,omitempty"`
}

func (Group) IsPrincipal()            {}
func (this Group) GetID() string      { return this.ID }
func (this Group) GetName() string    { return this.Name }
func (this Group) GetEmail() string   { return this.Email }
func (this Group) GetTenant() *Tenant { return this.Tenant }

func (Group) IsResource() {}

func (this Group) GetCreatedDate() string  { return this.CreatedDate }
func (this Group) GetUpdatedDate() *string { return this.UpdatedDate }

type Mutation struct {
}

type Permission struct {
	ID      string   `json:"id"`
	Name    string   `json:"name"`
	Action  string   `json:"action"`
	Service *Service `json:"service"`
}

type Query struct {
}

type Role struct {
	ID              string        `json:"id"`
	Name            string        `json:"name"`
	CreatedDate     string        `json:"createdDate"`
	UpdatedDate     *string       `json:"updatedDate,omitempty"`
	Version         string        `json:"version"`
	Description     *string       `json:"description,omitempty"`
	Permissions     []*Permission `json:"permissions"`
	RoleType        RoleTypeEnum  `json:"roleType"`
	AssignableScope Resource      `json:"assignableScope"`
}

func (Role) IsResource()                  {}
func (this Role) GetID() string           { return this.ID }
func (this Role) GetName() string         { return this.Name }
func (this Role) GetCreatedDate() string  { return this.CreatedDate }
func (this Role) GetUpdatedDate() *string { return this.UpdatedDate }

type Root struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	CreatedDate string  `json:"createdDate"`
	UpdatedDate *string `json:"updatedDate,omitempty"`
	Description *string `json:"description,omitempty"`
}

func (Root) IsResource()                  {}
func (this Root) GetID() string           { return this.ID }
func (this Root) GetName() string         { return this.Name }
func (this Root) GetCreatedDate() string  { return this.CreatedDate }
func (this Root) GetUpdatedDate() *string { return this.UpdatedDate }

func (Root) IsOrganization() {}

func (this Root) GetDescription() *string { return this.Description }

type Service struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type Tenant struct {
	ID          string       `json:"id"`
	Name        string       `json:"name"`
	CreatedDate string       `json:"createdDate"`
	UpdatedDate *string      `json:"updatedDate,omitempty"`
	Description *string      `json:"description,omitempty"`
	ParentOrg   Organization `json:"parentOrg"`
	ContactInfo *ContactInfo `json:"contactInfo,omitempty"`
}

func (Tenant) IsResource()                  {}
func (this Tenant) GetID() string           { return this.ID }
func (this Tenant) GetName() string         { return this.Name }
func (this Tenant) GetCreatedDate() string  { return this.CreatedDate }
func (this Tenant) GetUpdatedDate() *string { return this.UpdatedDate }

func (Tenant) IsOrganization() {}

func (this Tenant) GetDescription() *string { return this.Description }

type UpdateAccountInput struct {
	ID            string  `json:"id"`
	Name          *string `json:"name,omitempty"`
	Description   *string `json:"description,omitempty"`
	TenantID      *string `json:"tenantId,omitempty"`
	ParentOrgID   *string `json:"parentOrgId,omitempty"`
	BillingInfoID string  `json:"billingInfoId"`
}

type UpdateAddressInput struct {
	ID      string  `json:"id"`
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

type UpdateBillingAddressInput struct {
	ID      string  `json:"id"`
	Street  *string `json:"street,omitempty"`
	City    *string `json:"city,omitempty"`
	State   *string `json:"state,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	Country *string `json:"country,omitempty"`
}

type UpdateBillingInfoInput struct {
	ID               string `json:"id"`
	CreditCardNumber string `json:"creditCardNumber"`
	CreditCardType   string `json:"creditCardType"`
	ExpirationDate   string `json:"expirationDate"`
	Cvv              string `json:"cvv"`
	BillingAddressID string `json:"billingAddressId"`
}

type UpdateBindingInput struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	PrincipalID string `json:"principalId"`
	RoleID      string `json:"roleId"`
	ScopeRefID  string `json:"scopeRefId"`
	Version     string `json:"version"`
}

type UpdateClientOrganizationUnitInput struct {
	ID          string  `json:"id"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	TenantID    *string `json:"tenantId,omitempty"`
	ParentOrgID *string `json:"parentOrgId,omitempty"`
}

type UpdateGroupInput struct {
	ID          string   `json:"id"`
	Name        *string  `json:"name,omitempty"`
	Email       *string  `json:"email,omitempty"`
	TenantID    string   `json:"tenantId"`
	Description *string  `json:"description,omitempty"`
	Members     []string `json:"members"`
}

type UpdatePermissionInput struct {
	ID         string  `json:"id"`
	Name       *string `json:"name,omitempty"`
	Action     *string `json:"action,omitempty"`
	ServiceRef *string `json:"serviceRef,omitempty"`
}

type UpdateRoleInput struct {
	ID          string        `json:"id"`
	Name        *string       `json:"name,omitempty"`
	Version     string        `json:"version"`
	Description *string       `json:"description,omitempty"`
	Permissions []string      `json:"permissions,omitempty"`
	RoleType    *RoleTypeEnum `json:"roleType,omitempty"`
	ScopeID     *string       `json:"scopeId,omitempty"`
}

type UpdateRootInput struct {
	ID          string  `json:"id"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
}

type UpdateTenantInput struct {
	ID            string  `json:"id"`
	Name          *string `json:"name,omitempty"`
	Description   *string `json:"description,omitempty"`
	ParentOrgID   *string `json:"parentOrgId,omitempty"`
	ContactInfoID string  `json:"contactInfoId"`
}

type UpdateUserInput struct {
	ID        string  `json:"id"`
	FirstName *string `json:"firstName,omitempty"`
	LastName  *string `json:"lastName,omitempty"`
	Email     *string `json:"email,omitempty"`
	TenantID  *string `json:"tenantId,omitempty"`
}

type User struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	FirstName   string  `json:"firstName"`
	LastName    string  `json:"lastName"`
	Email       string  `json:"email"`
	CreatedDate string  `json:"createdDate"`
	UpdatedDate *string `json:"updatedDate,omitempty"`
	Tenant      *Tenant `json:"tenant"`
}

func (User) IsPrincipal()            {}
func (this User) GetID() string      { return this.ID }
func (this User) GetName() string    { return this.Name }
func (this User) GetEmail() string   { return this.Email }
func (this User) GetTenant() *Tenant { return this.Tenant }

func (User) IsResource() {}

func (this User) GetCreatedDate() string  { return this.CreatedDate }
func (this User) GetUpdatedDate() *string { return this.UpdatedDate }

type RoleTypeEnum string

const (
	RoleTypeEnumDefault RoleTypeEnum = "DEFAULT"
	RoleTypeEnumCustom  RoleTypeEnum = "CUSTOM"
)

var AllRoleTypeEnum = []RoleTypeEnum{
	RoleTypeEnumDefault,
	RoleTypeEnumCustom,
}

func (e RoleTypeEnum) IsValid() bool {
	switch e {
	case RoleTypeEnumDefault, RoleTypeEnumCustom:
		return true
	}
	return false
}

func (e RoleTypeEnum) String() string {
	return string(e)
}

func (e *RoleTypeEnum) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = RoleTypeEnum(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid RoleTypeEnum", str)
	}
	return nil
}

func (e RoleTypeEnum) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
